/*
* Protos for function calls to the Compound CToken adaptor.
*/

syntax = "proto3";
package steward.v4;

option go_package = "/steward_proto";

import "base.proto";

// Represents call data for the Compound C Token adaptor V2, managing lending positions on Compound.
message CompoundCTokenAdaptorV2 {
    oneof function {
        /***** BASE ADAPTOR FUNCTIONS *****/

        // Represents function `revokeApproval(ERC20 asset, address spender)`
        RevokeApproval revoke_approval = 1;

        /***** ADAPTOR-SPECIFIC FUNCTIONS *****/

        // Represents function `depositToCompound(CErc20 market, uint256 amountToDeposit)`
        DepositToCompound deposit_to_compound = 2;
        // Represents function `withdrawFromCompound(CErc20 market, uint256 amountToWithdraw)`
        WithdrawFromCompound withdraw_from_compound = 3;
        // Represents function `claimComp()`
        ClaimComp claim_comp = 4;
    }

    /*
    * Allows strategists to lend assets on Compound.
    *
    * Represents function `depositToCompound(CErc20 market, uint256 amountToDeposit)`
    */
    message DepositToCompound {
        string market = 1;
        string amount_to_deposit = 2;
    }

    /*
    * Allows strategists to withdraw assets from Compound.
    *
    * Represents function `withdrawFromCompound(CErc20 market, uint256 amountToWithdraw)`
    */
    message WithdrawFromCompound {
        string market = 1;
        string amount_to_withdraw = 2;
    }

    /*
    * Allows strategists to claim COMP rewards.
    *
    * Represents function `claimComp()`
    */
    message ClaimComp {}
}

message CompoundCTokenAdaptorV2Calls {
    repeated CompoundCTokenAdaptorV2 calls = 1;
}
